###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.60.5.50814/W32 for MSP430       15/May/2014  04:06:17 #
# Copyright 1996-2013 IAR Systems AB.                                         #
#                                                                             #
#    __rt_version  =  3                                                       #
#    __double_size =  32                                                      #
#    __reg_r4      =  free                                                    #
#    __reg_r5      =  free                                                    #
#    __pic         =  no                                                      #
#    __core        =  430                                                     #
#    Source file   =  C:\Documents and Settings\Nisrina Rahmah\My             #
#                     Documents\backupan\font.c                               #
#    Command line  =  "C:\Documents and Settings\Nisrina Rahmah\My            #
#                     Documents\backupan\font.c" -D LAUNCHPAD -D ZM_PHY_SPI   #
#                     -D REGION_NORTH_AMERICA -D DISPLAY_NETWORK_INFORMATION  #
#                     -lc "C:\Documents and Settings\Nisrina                  #
#                     Rahmah\Desktop\Anaren AIR-ZNP FirmwareExamples          #
#                     v2070-20140306\ZM Examples\IAR\Launchpad\List\" -o      #
#                     "C:\Documents and Settings\Nisrina                      #
#                     Rahmah\Desktop\Anaren AIR-ZNP FirmwareExamples          #
#                     v2070-20140306\ZM Examples\IAR\Launchpad\Obj\"          #
#                     --no_cse --no_unroll --no_inline --no_code_motion       #
#                     --no_tbaa --debug -D__MSP430G2553__ -e --double=32      #
#                     --dlib_config "C:\Program Files\IAR Systems\Embedded    #
#                     Workbench 6.5\430\LIB\DLIB\dl430fn.h" -I "C:\Documents  #
#                     and Settings\Nisrina Rahmah\Desktop\Anaren AIR-ZNP      #
#                     FirmwareExamples v2070-20140306\ZM Examples\IAR\" -I    #
#                     "C:\Documents and Settings\Nisrina                      #
#                     Rahmah\Desktop\Anaren AIR-ZNP FirmwareExamples          #
#                     v2070-20140306\ZM Examples\IAR/..\" -I "C:\Documents    #
#                     and Settings\Nisrina Rahmah\Desktop\Anaren AIR-ZNP      #
#                     FirmwareExamples v2070-20140306\ZM                      #
#                     Examples\IAR/../ZM\" -I "C:\Documents and               #
#                     Settings\Nisrina Rahmah\Desktop\Anaren AIR-ZNP          #
#                     FirmwareExamples v2070-20140306\ZM                      #
#                     Examples\IAR/../HAL\" -I "C:\Documents and              #
#                     Settings\Nisrina Rahmah\Desktop\Anaren AIR-ZNP          #
#                     FirmwareExamples v2070-20140306\ZM                      #
#                     Examples\IAR/../Common\" -Ol                            #
#    List file     =  C:\Documents and Settings\Nisrina                       #
#                     Rahmah\Desktop\Anaren AIR-ZNP FirmwareExamples          #
#                     v2070-20140306\ZM Examples\IAR\Launchpad\List\font.lst  #
#    Object file   =  C:\Documents and Settings\Nisrina                       #
#                     Rahmah\Desktop\Anaren AIR-ZNP FirmwareExamples          #
#                     v2070-20140306\ZM Examples\IAR\Launchpad\Obj\font.r43   #
#                                                                             #
#                                                                             #
###############################################################################

C:\Documents and Settings\Nisrina Rahmah\My Documents\backupan\font.c
      1          //#include "font.h"
      2          
      3          const unsigned char FontLookup [][5] =
      4          {
      5              { 0x00, 0x00, 0x00, 0x00, 0x00 },  // sp 00
      6              { 0x00, 0x00, 0x2f, 0x00, 0x00 },   // ! 01
      7              { 0x00, 0x07, 0x00, 0x07, 0x00 },   // " 02
      8              { 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // # 03 
      9              { 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $ 04
     10              { 0xc4, 0xc8, 0x10, 0x26, 0x46 },   // % 05 
     11              { 0x36, 0x49, 0x55, 0x22, 0x50 },   // & 06
     12              { 0x00, 0x05, 0x03, 0x00, 0x00 },   // ' 07
     13              { 0x00, 0x1c, 0x22, 0x41, 0x00 },   // ( 08
     14              { 0x00, 0x41, 0x22, 0x1c, 0x00 },   // ) 09
     15              { 0x14, 0x08, 0x3E, 0x08, 0x14 },   // * 10
     16              { 0x08, 0x08, 0x3E, 0x08, 0x08 },   // + 11
     17              { 0x00, 0x00, 0x50, 0x30, 0x00 },   // , 12
     18              { 0x10, 0x10, 0x10, 0x10, 0x10 },   // - 13
     19              { 0x00, 0x60, 0x60, 0x00, 0x00 },   // . 14
     20              { 0x20, 0x10, 0x08, 0x04, 0x02 },   // / 15
     21              { 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0 16
     22              { 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1 17
     23              { 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2 18
     24              { 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3 19
     25              { 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4 20
     26              { 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5 21
     27              { 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6 22
     28              { 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7 23 
     29              { 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8 24
     30              { 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9 25
     31              { 0x00, 0x36, 0x36, 0x00, 0x00 },   // : 26
     32              { 0x00, 0x56, 0x36, 0x00, 0x00 },   // ; 27
     33              { 0x08, 0x14, 0x22, 0x41, 0x00 },   // < 28
     34              { 0x14, 0x14, 0x14, 0x14, 0x14 },   // = 29
     35              { 0x00, 0x41, 0x22, 0x14, 0x08 },   // > 30
     36              { 0x02, 0x01, 0x51, 0x09, 0x06 },   // ? 31
     37              { 0x32, 0x49, 0x59, 0x51, 0x3E },   // @ 32
     38              { 0x7E, 0x11, 0x11, 0x11, 0x7E },   // A 33
     39              { 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B 34
     40              { 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C 35
     41              { 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D 36
     42              { 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E 37
     43              { 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F 38
     44              { 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G 39
     45              { 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H 40
     46              { 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I 41
     47              { 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J 42
     48              { 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K 43
     49              { 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L 44
     50              { 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M 45
     51              { 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N 46
     52              { 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O 47
     53              { 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P 48
     54              { 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q 49
     55              { 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R 50
     56              { 0x46, 0x49, 0x49, 0x49, 0x31 },   // S 51
     57              { 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T 52
     58              { 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U 53
     59              { 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V 54
     60              { 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W 55
     61              { 0x63, 0x14, 0x08, 0x14, 0x63 },   // X 56
     62              { 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y 57
     63              { 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z 58
     64              { 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [ 59
     65              { 0x55, 0x2A, 0x55, 0x2A, 0x55 },   //55 60
     66              { 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ] 61
     67              { 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^ 62
     68              { 0x40, 0x40, 0x40, 0x40, 0x40 },   // _ 63
     69              { 0x00, 0x01, 0x02, 0x04, 0x00 },   // ' 64
     70              { 0x20, 0x54, 0x54, 0x54, 0x78 },   // a 65
     71              { 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b 66
     72              { 0x38, 0x44, 0x44, 0x44, 0x20 },   // c 67
     73              { 0x38, 0x44, 0x44, 0x48, 0x7F },   // d 68
     74              { 0x38, 0x54, 0x54, 0x54, 0x18 },   // e 69
     75              { 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f 70
     76              { 0x0C, 0x52, 0x52, 0x52, 0x3E },   // g 71
     77              { 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h 72
     78              { 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i 73
     79              { 0x20, 0x40, 0x44, 0x3D, 0x00 },   // j 74
     80              { 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k 75
     81              { 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l 76
     82              { 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m 77
     83              { 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n 78
     84              { 0x38, 0x44, 0x44, 0x44, 0x38 },   // o 79
     85              { 0x7C, 0x14, 0x14, 0x14, 0x08 },   // p 80
     86              { 0x08, 0x14, 0x14, 0x18, 0x7C },   // q 81
     87              { 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r 82
     88              { 0x48, 0x54, 0x54, 0x54, 0x20 },   // s 83
     89              { 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t 84
     90              { 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u 85
     91              { 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v 86
     92              { 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w 87
     93              { 0x44, 0x28, 0x10, 0x28, 0x44 },   // x 88
     94              { 0x0C, 0x50, 0x50, 0x50, 0x3C },   // y 89
     95              { 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z 90
     96              { 0x08, 0x6C, 0x6A, 0x19, 0x08 },   // { 91
     97              { 0x30, 0x4E, 0x61, 0x4E, 0x30 },   // | 92
     98              { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF }    // # 93   
     99          };
    100          
    101          // Return pointer to font character
    102          unsigned char *fontPtr(char c)
    103          {
    104            if ( c < ' ' || c-' ' > 93  )
    105              return (unsigned char*)FontLookup[0];
    106            else
    107              return (unsigned char*)FontLookup[(unsigned char)(c-' ')]; 
    108          }

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      2   fontPtr


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
     470  FontLookup
      44  fontPtr

 
  44 bytes in segment CODE
 470 bytes in segment DATA16_C
 
  44 bytes of CODE  memory
 470 bytes of CONST memory

Errors: none
Warnings: none
